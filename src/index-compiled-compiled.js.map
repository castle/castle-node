{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"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","file":"index-compiled-compiled.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _restify = require('restify');\n\nvar _restify2 = _interopRequireDefault(_restify);\n\nvar _package = require('../package.json');\n\nvar _package2 = _interopRequireDefault(_package);\n\nvar _expressCompiled = require('./express-compiled.js');\n\nvar _expressCompiled2 = _interopRequireDefault(_expressCompiled);\n\nvar _os = require('os');\n\nvar _os2 = _interopRequireDefault(_os);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Castle = function () {\n\n    /**\n     *\n     * @param apiKey\n     * @param apiSecret\n     */\n\n    function Castle(_ref) {\n        var _ref$apiKey = _ref.apiKey;\n        var apiKey = _ref$apiKey === undefined ? null : _ref$apiKey;\n        var apiSecret = _ref.apiSecret;\n        var _ref$disableClientUse = _ref.disableClientUserAgent;\n        var disableClientUserAgent = _ref$disableClientUse === undefined ? false : _ref$disableClientUse;\n\n        _classCallCheck(this, Castle);\n\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n        this.disableClientUserAgent = disableClientUserAgent;\n        this.client = _restify2.default.createJsonClient({ url: 'https://api.castle.io' });\n        this.getClient().basicAuth('call-the-cops-i-dont-give-a-fck', apiSecret);\n    }\n\n    /**\n     *\n     * @param {string} event the event you want to track. This can be custom or one from Castle.Events\n     * @param {string} user_id the id of the affected user (If known)\n     * @param {object} details [optional] other details for the event. EX: the $login parameter for emails\n     * @param {object} headers [optional] the HTTP headers sent by the user/client\n     * @param {string} ip [optional] the user/client's IP Address\n     * @param {string} cookie [optional] the castle cookie left by the clientside javascript sdk\n     * @returns {Promise}\n     */\n\n    _createClass(Castle, [{\n        key: 'trackEvent',\n        value: function trackEvent(_ref2) {\n            var _this = this;\n\n            var event = _ref2.event;\n            var user_id = _ref2.user_id;\n            var _ref2$details = _ref2.details;\n            var details = _ref2$details === undefined ? undefined : _ref2$details;\n            var _ref2$headers = _ref2.headers;\n            var headers = _ref2$headers === undefined ? {} : _ref2$headers;\n            var _ref2$ip = _ref2.ip;\n            var ip = _ref2$ip === undefined ? undefined : _ref2$ip;\n            var _ref2$cookie = _ref2.cookie;\n            var cookie = _ref2$cookie === undefined ? '' : _ref2$cookie;\n            var _ref2$userAgent = _ref2.userAgent;\n            var userAgent = _ref2$userAgent === undefined ? '' : _ref2$userAgent;\n\n            return new Promise(function (resolve, reject) {\n                if (event === undefined || event === null || event === \"\") {\n                    return reject(new Error('Missing event', 'MISSING_EVENT_NAME'));\n                }\n\n                var postData = {\n                    name: event,\n                    user_id: user_id,\n                    details: details\n                };\n                _this.getClient().post({\n                    path: '/v1/events',\n                    headers: _this.generateHeaders(headers, ip, cookie, userAgent)\n                }, postData, function (error, request, response, obj) {\n                    if (error) {\n                        return reject(error);\n                    } else if (request.statusCode < 200 || request.statusCode >= 300) {\n                        return reject(new Error('Invalid HTTP Status Code ' + request.statusCode, 'INVALID_HTTP_STATUS_CODE'));\n                    }\n                    return resolve(obj);\n                });\n            });\n        }\n    }, {\n        key: 'identify',\n        value: function identify(_ref3) {\n            var _this2 = this;\n\n            var user_id = _ref3.user_id;\n            var user_data = _ref3.user_data;\n            var _ref3$headers = _ref3.headers;\n            var headers = _ref3$headers === undefined ? {} : _ref3$headers;\n            var _ref3$ip = _ref3.ip;\n            var ip = _ref3$ip === undefined ? undefined : _ref3$ip;\n            var _ref3$cookie = _ref3.cookie;\n            var cookie = _ref3$cookie === undefined ? '' : _ref3$cookie;\n            var _ref3$userAgent = _ref3.userAgent;\n            var userAgent = _ref3$userAgent === undefined ? '' : _ref3$userAgent;\n\n            return new Promise(function (resolve, reject) {\n                _this2.getClient().put({\n                    path: '/v1/users/' + user_id,\n                    headers: _this2.generateHeaders(headers, ip, cookie, userAgent)\n                }, user_data, function (error, request, response, obj) {\n                    if (error) {\n                        return reject(error);\n                    } else if (request.statusCode < 200 || request.statusCode >= 300) {\n                        return reject(new Error('Invalid HTTP Status Code ' + request.statusCode, 'INVALID_HTTP_STATUS_CODE'));\n                    }\n                    return resolve(obj);\n                });\n            });\n        }\n    }, {\n        key: 'generateHeaders',\n        value: function generateHeaders(clientHeaders, ip, cookie, userAgent) {\n            return this.stripUndefinedVariables({\n                'X-Castle-Ip': ip,\n                'X-Castle-Cookie-Id': cookie,\n                'X-Castle-User-Agent': userAgent,\n                'X-Castle-Headers': JSON.stringify(clientHeaders),\n                'X-Castle-Client-User-Agent': this.isClientUserAgentDisabled() ? undefined : this.getClientUserAgent()\n            });\n        }\n    }, {\n        key: 'stripUndefinedVariables',\n        value: function stripUndefinedVariables(obj) {\n            var toReturn = {};\n            Object.keys(obj).forEach(function (k) {\n                var v = obj[k];\n                if (v !== undefined && v !== null) {\n                    toReturn[k] = v;\n                }\n            });\n            return toReturn;\n        }\n    }, {\n        key: 'express',\n        value: function express(opts) {\n            var castle = new Castle(opts);\n            return (0, _expressCompiled2.default)(castle);\n        }\n    }, {\n        key: 'getClient',\n        value: function getClient() {\n            return this.client;\n        }\n\n        /**\n         *\n         * @returns {{}}\n         */\n\n    }, {\n        key: 'getClientUserAgent',\n        value: function getClientUserAgent() {\n            return {\n                bindings_version: _package2.default.version,\n                lang: 'Node.js',\n                lang_version: process.version,\n                platform: _os2.default.platform(),\n                publisher: 'castle'\n            };\n        }\n    }, {\n        key: 'isClientUserAgentDisabled',\n        value: function isClientUserAgentDisabled() {\n            return this.disableClientUserAgent || false;\n        }\n    }]);\n\n    return Castle;\n}();\n\n/**\n *\n * This is used for easy access to the different DEFAULT events\n *\n * @type {{LOGIN_SUCCEEDED: string, LOGIN_FAILED: string, LOGOUT_SUCCEEDED: string, REGISTRATION_SUCCEEDED: string, REGISTRATION_FAILED: string, EMAIL_CHANGE_REQUESTED: string, EMAIL_CHANGE_SUCCEEDED: string, EMAIL_CHANGE_FAILED: string, PASSWORD_RESET_REQUESTED: string, PASSWORD_RESET_SUCCEEDED: string, PASSWORD_RESET_FAILED: string, PASSWORD_CHANGE_SUCCEEDED: string, PASSWORD_CHANGE_FAILED: string, CHALLENGE_REQUESTED: string, CHALLENGE_SUCCEEDED: string, CHALLENGE_FAILED: string}}\n */\n\nCastle.Events = {\n    LOGIN_SUCCEEDED: '$login.succeeded', //Record when a user attempts to log in.\n    LOGIN_FAILED: '$login.failed', //Record when a user logs out.\n    LOGOUT_SUCCEEDED: '$logout.succeeded', //Record when a user logs out.\n    REGISTRATION_SUCCEEDED: '$registration.succeeded', //Capture account creation, both when a user signs up as well as when created manually by an administrator.\n    REGISTRATION_FAILED: '$registration.failed', //Record when an account failed to be created.\n    EMAIL_CHANGE_REQUESTED: '$email_change.requested', //An attempt was made to change a user’s email.\n    EMAIL_CHANGE_SUCCEEDED: '$email_change.succeeded', //The user completed all of the steps in the email address change process and the email was successfully changed.\n    EMAIL_CHANGE_FAILED: '$email_change.failed', //Use to record when a user failed to change their email address.\n    PASSWORD_RESET_REQUESTED: '$password_reset.requested', //An attempt was made to reset a user’s password.\n    PASSWORD_RESET_SUCCEEDED: '$password_reset.succeeded', //The user completed all of the steps in the password reset process and the password was successfully reset. Password resets do not required knowledge of the current password.\n    PASSWORD_RESET_FAILED: '$password_reset.failed', //Use to record when a user failed to reset their password.\n    PASSWORD_CHANGE_SUCCEEDED: '$password_change.succeeded', //Use to record when a user changed their password. This event is only logged when users change their own password.\n    PASSWORD_CHANGE_FAILED: '$password_change.failed', //Use to record when a user failed to change their password.\n    CHALLENGE_REQUESTED: '$challenge.requested', //Record when a user is prompted with additional verification, such as two-factor authentication or a captcha.\n    CHALLENGE_SUCCEEDED: '$challenge.succeeded', //Record when additional verification was successful.\n    CHALLENGE_FAILED: '$challenge.failed' //Record when additional verification failed.\n};\n\nmodule.exports = Castle;\n\n//# sourceMappingURL=index-compiled.js.map"]}